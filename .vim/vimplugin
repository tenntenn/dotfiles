"---------------------------------------------------------------------------
" plugin settings
"---------------------------------------------------------------------------

"----------------------------------------
" NeoBundle
"----------------------------------------
set nocompatible
filetype off

if has('vim_starting')
set runtimepath+=~/.vim/bundle/neobundle.vim/
endif

call neobundle#rc(expand('~/.vim/bundle/'))

"--------------------
" my plugins

" NeoBundle
NeoBundle 'git://github.com/Shougo/neobundle.vim.git'
" unite
NeoBundle 'git://github.com/Shougo/unite.vim.git'
" unite-outline
NeoBundle 'git://github.com/h1mesuke/unite-outline.git'
" neocomplcache
NeoBundle 'git://github.com/Shougo/neocomplcache.git'
" neocomplcache-snippets-complete
NeoBundle 'git://github.com/Shougo/neocomplcache-snippets-complete.git'
" vimfiler
NeoBundle 'git://github.com/Shougo/vimfiler.git'
" vim-quickrun
NeoBundle 'git://github.com/thinca/vim-quickrun.git'
" vim-fugitive
NeoBundle 'git://github.com/tpope/vim-fugitive.git'
" YankRing
NeoBundle 'git://github.com/vim-scripts/YankRing.vim.git'
" Indent-Guides
NeoBundle 'git://github.com/vim-scripts/Indent-Guides.git'
" tComment
NeoBundle 'git://github.com/vim-scripts/tComment.git'
" sudo.vim
NeoBundle 'git://github.com/vim-scripts/sudo.vim.git'
" surround.vim
NeoBundle 'git://github.com/tpope/vim-surround.git'
" NERDTree.vim
NeoBundle 'git://github.com/scrooloose/nerdtree.git'
" vim-powerline
NeoBundle 'git://github.com/Lokaltog/vim-powerline.git'
" vim-easymotion
NeoBundle 'git://github.com/Lokaltog/vim-easymotion.git'

"--------------------

filetype plugin indent on     " Required!

" Installation check.
if neobundle#exists_not_installed_bundles()
echomsg 'Not installed bundles : ' .
     \ string(neobundle#get_not_installed_bundle_names())
echomsg 'Please execute ":NeoBundleInstall" command.'
endif

"----------------------------------------
" unite
"----------------------------------------

" インサートモードで開始する
let g:unite_enable_start_insert=1
" バッファ一覧
nnoremap <silent> ,ub :<C-u>Unite buffer<CR>
" ファイル一覧
nnoremap <silent> ,uf :<C-u>UniteWithBufferDir -buffer-name=files file<CR>
" レジスタ一覧
nnoremap <silent> ,ur :<C-u>Unite -buffer-name=register register<CR>
" 最近使用したファイル一覧
nnoremap <silent> ,um :<C-u>Unite file_mru<CR>
" 常用セット
nnoremap <silent> ,uu :<C-u>Unite buffer file_mru<CR>
" 全部乗せ
nnoremap <silent> ,ua :<C-u>UniteWithBufferDir -buffer-name=files buffer file_mru bookmark file<CR>

"----------------------------------------
" unite-outline
"----------------------------------------

" ソースの関数一覧表示
nnoremap <silent> ,uo :<C-u>Unite outline<CR>
" ソースの関数一覧を上下分割で常に表示
nnoremap <silent> ,uho :<C-u>Unite -winheight=15 -no-quit outline<CR>
" ソースの関数一覧を左右分割で常に表示
nnoremap <silent> ,uvo :<C-u>Unite -vertical -winwidth=25 -no-quit outline<CR>

"----------------------------------------
" neocomplcache
"----------------------------------------

" 自動的に開始
let g:neocomplcache_enable_at_startup = 1
" バッファの補完を2文字目から開始
let g:neocomplcache_min_keyword_length = 2
" シンタックスファイルからの補完を２文字目から開始
let g:neocomplcache_min_syntax_length = 2
" アンダーバー補完を有効化
let g:neocomplcache_enable_underbar_completion = 1
" タブキーで補完
inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"
" 補完ウィンドウが正しく閉じられるようにする
inoremap <expr><C-h> neocomplcache#smart_close_popup()."\<C-h>"
inoremap <expr><BS> neocomplcache#smart_close_popup()."\<C-h>"
inoremap <expr><C-y>  neocomplcache#close_popup()
inoremap <expr><C-e>  neocomplcache#cancel_popup()

"----------------------------------------
" neocomplcache-snippets-complete
"----------------------------------------

let g:neocomplcache_snippets_dir = '~/.vim/snippets'
imap <C-j> <plug>(neocomplcache_snippets_expand)
smap <C-j> <plug>(neocomplcache_snippets_expand)

"----------------------------------------
" vimfile
"----------------------------------------

" vimfilerをデフォルトのファイラーとする
let g:vimfiler_as_default_explorer = 1

"----------------------------------------
" YankRing
"----------------------------------------

" 履歴の保存ファイルを指定
let g:yankring_history_dir = expand('$HOME')
let g:yankring_history_file = '.yankring_history'
" 最大保存件数
let g:yankring_max_history = 100
" 重複を許可しない
let g:yankring_ignore_duplicate = 1
" ウィンドウの高さ
let g:yankring_window_height = 20 
" F7でYRShowを実行
:nnoremap <silent> <F7> :YRShow<CR>

"----------------------------------------
" indent-guides
"----------------------------------------

" ハイライトをデフォルトで有効
let g:indent_guides_enable_on_vim_startup = 1
" 自動的なカラーをオフに
let g:indent_guides_auto_colors = 1
" ハイライトのサイズを小さく
let g:indent_guides_guide_size = 1
"----------------------------------------
" NERDTree
"----------------------------------------

" ,nt でNERDTreeを開く
nnoremap <silent> ,nt :NERDTreeToggle<CR>

"----------------------------------------
" vim-powerline
"----------------------------------------
" 正しく表示するにはvim-powerline用のパッチフォントを生成すること
" https://github.com/Lokaltog/vim-powerline

let g:Powerline_symbols='fancy'
set t_Co=256

